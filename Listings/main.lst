C51 COMPILER V9.57.0.0   MAIN                                                              11/28/2020 00:10:29 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main
                    -.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "reg51.h"
   2          #include "stdio.h"
   3          
   4          
   5          
   6          #define S_RECEVIER_SIZE  64
   7          unsigned char RevBuffer[S_RECEVIER_SIZE];
   8          int revDataCount = 0;
   9          int revTempLength = 0;
  10          
  11          
  12          void uart_init(void)  
  13          {  
  14   1          SCON=0x50; //0101 0000.串口工作方式1，允许串行控制 
  15   1          TMOD=0x20;//即0010 0000,定时器/计数器1,工作方式2  
  16   1          TH1=0xFD;//设置波特率为9600  
  17   1          TL1=0xFD;  
  18   1          TR1=1;//启动定时器/计数器1  
  19   1      
  20   1          ES=1;
  21   1          EA=1;
  22   1      
  23   1          TI=1;//直接使用printf必须加入此句才能实现发送  
  24   1      //    RI=1;
  25   1      }  
  26          
  27          void U1SendData(unsigned char ch)
  28          {
  29   1          
  30   1          SBUF = ch;                  //写数据到UART数据寄存器
  31   1          while(TI == 0);             //在停止位没有发送时，TI为0即一直等待
  32   1          TI = 0;   //清除TI位（该位必须软件清零）
  33   1          
  34   1      }
  35          
  36          void UartSendStr(unsigned char *p)
  37          {
  38   1        while (*p)
  39   1        {
  40   2          U1SendData(*p++);
  41   2        }
  42   1      }
  43          
  44          
  45          char putchar(char c)
  46          {
  47   1        U1SendData(c);
  48   1        return c;
  49   1      }
  50            
  51          
  52          void Delay100ms()   //@11.0592MHz
  53          {
  54   1        unsigned char i, j;
C51 COMPILER V9.57.0.0   MAIN                                                              11/28/2020 00:10:29 PAGE 2   

  55   1      
  56   1        i = 160;
  57   1        j = 73;
  58   1        do
  59   1        {
  60   2          while (--j);
  61   2        } while (--i);
  62   1      }
  63          
  64          void main()
  65          {
  66   1        int i=5;
  67   1        uart_init();
  68   1        while(1)
  69   1        {   
  70   2      //    for(i=0;i<revTempLength;i++)
  71   2      //    {
  72   2      //      U1SendData(RevBuffer[i]);
  73   2      //    }
  74   2      //      U1SendData('\r');
  75   2      //      U1SendData('\n');
  76   2      //      UartSendStr(RevBuffer);
  77   2      //      U1SendData('4');
  78   2            printf("%s",RevBuffer);
  79   2            U1SendData('\r');
  80   2            U1SendData('\n');
  81   2            
  82   2      
  83   2            Delay100ms();
  84   2        }
  85   1      }
  86          
  87          
  88           void Uart_Isr() interrupt 4 using 1//串口中断
  89          {
  90   1          unsigned char temp; //临时变量，用于缓冲收发数据
  91   1      
  92   1          if(RI)  // 判断是串口接收产生中断
  93   1          {
  94   2              RI = 0;       // 清接收中断标志
  95   2              temp = SBUF;  // 接收到的数据写入缓冲BUF
  96   2              //SBUF = temp;  // 将收到的数据发回给电脑端
  97   2      
  98   2              if (temp == 0x0D0A) // 以‘\n’做为接收字符串结束标志 
  99   2              {
 100   3                  revTempLength = revDataCount;
 101   3                  for(revTempLength;revTempLength<S_RECEVIER_SIZE;revTempLength++)
 102   3                  {
 103   4                    RevBuffer[revTempLength]=0;
 104   4                  }
 105   3                  revDataCount = 0;
 106   3              } 
 107   2              else
 108   2              {     
 109   3                  RevBuffer[revDataCount] = temp;
 110   3                  revDataCount++;
 111   3              } 
 112   2          }
 113   1          
 114   1      //    if (TI)    // 判断是串口发送产生中断
 115   1      //    {
 116   1      //      TI = 0; // 清发送中断
C51 COMPILER V9.57.0.0   MAIN                                                              11/28/2020 00:10:29 PAGE 3   

 117   1      //    } 
 118   1          
 119   1        }   
 120          
 121          
 122          
 123          
 124          
 125          
 126          
 127          
 128          
 129          
 130          
 131          
 132          
 133          
 134          
 135          
 136          
 137          
 138          
 139          
 140          
 141          
 142          
 143          
 144          
 145          
 146          
 147          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    210    ----
   CONSTANT SIZE    =      3    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     68       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
